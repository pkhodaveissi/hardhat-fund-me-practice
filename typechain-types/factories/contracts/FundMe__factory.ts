/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620016933803806200169383398181016040528101906200003791906200023b565b620000836040518060400160405280601d81526020017f436f6e74726163743a3a20707269636520666565642061646472657373000000815250826200010260201b620008de1760201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000356565b620001a482826040516024016200011b92919062000322565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620001a860201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020382620001d6565b9050919050565b6200021581620001f6565b81146200022157600080fd5b50565b60008151905062000235816200020a565b92915050565b600060208284031215620002545762000253620001d1565b5b6000620002648482850162000224565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620002a95780820151818401526020810190506200028c565b83811115620002b9576000848401525b50505050565b6000601f19601f8301169050919050565b6000620002dd826200026d565b620002e9818562000278565b9350620002fb81856020860162000289565b6200030681620002bf565b840191505092915050565b6200031c81620001f6565b82525050565b600060408201905081810360008301526200033e8185620002d0565b90506200034f602083018462000311565b9392505050565b60805160601c6113096200038a6000396000818161033501528181610584015281816105d401526107ca01526113096000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610b89565b6102eb565b6040516100cc9190610bcf565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610573565b6040516101019190610bcf565b60405180910390f35b34801561011657600080fd5b5061011f610580565b60405161012c9190610bf9565b60405180910390f35b34801561014157600080fd5b5061014a6105a8565b6040516101579190610c73565b60405180910390f35b6101686101b1565b005b6101726105d2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610cba565b610896565b6040516101a89190610bf9565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461097a90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610d44565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610d93565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610463576000600182815481106103de576103dd610de9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045b90610e18565b9150506103bb565b50600067ffffffffffffffff81111561047f5761047e610e61565b5b6040519080825280602002602001820160405280156104ad5781602001602082028036833780820191505090505b50600190805190602001906104c3929190610a7f565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ea90610ec1565b60006040518083038185875af1925050503d8060008114610527576040519150601f19603f3d011682016040523d82523d6000602084013e61052c565b606091505b5050905080610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056790610f22565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610657576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106db57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610691575b5050505050905060005b815181101561076557600082828151811061070357610702610de9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075d90610e18565b9150506106e5565b50600067ffffffffffffffff81111561078157610780610e61565b5b6040519080825280602002602001820160405280156107af5781602001602082028036833780820191505090505b50600190805190602001906107c5929190610a7f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080c90610ec1565b60006040518083038185875af1925050503d8060008114610849576040519150601f19603f3d011682016040523d82523d6000602084013e61084e565b606091505b5050905080610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990610f22565b60405180910390fd5b5050565b6000600182815481106108ac576108ab610de9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61097682826040516024016108f4929190610fca565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109b6565b5050565b600080610986836109df565b90506000670de0b6b3a7640000858361099f9190610ffa565b6109a99190611083565b9050809250505092915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2857600080fd5b505afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a609190611141565b5050509150506402540be40081610a7791906111bc565b915050919050565b828054828255906000526020600020908101928215610af8579160200282015b82811115610af75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a9f565b5b509050610b059190610b09565b5090565b5b80821115610b22576000816000905550600101610b0a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5682610b2b565b9050919050565b610b6681610b4b565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b600060208284031215610b9f57610b9e610b26565b5b6000610bad84828501610b74565b91505092915050565b6000819050919050565b610bc981610bb6565b82525050565b6000602082019050610be46000830184610bc0565b92915050565b610bf381610b4b565b82525050565b6000602082019050610c0e6000830184610bea565b92915050565b6000819050919050565b6000610c39610c34610c2f84610b2b565b610c14565b610b2b565b9050919050565b6000610c4b82610c1e565b9050919050565b6000610c5d82610c40565b9050919050565b610c6d81610c52565b82525050565b6000602082019050610c886000830184610c64565b92915050565b610c9781610bb6565b8114610ca257600080fd5b50565b600081359050610cb481610c8e565b92915050565b600060208284031215610cd057610ccf610b26565b5b6000610cde84828501610ca5565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d2e601b83610ce7565b9150610d3982610cf8565b602082019050919050565b60006020820190508181036000830152610d5d81610d21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d9e82610bb6565b9150610da983610bb6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dde57610ddd610d64565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e2382610bb6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5657610e55610d64565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eab600083610e90565b9150610eb682610e9b565b600082019050919050565b6000610ecc82610e9e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f0c600b83610ce7565b9150610f1782610ed6565b602082019050919050565b60006020820190508181036000830152610f3b81610eff565b9050919050565b600081519050919050565b60005b83811015610f6b578082015181840152602081019050610f50565b83811115610f7a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f9c82610f42565b610fa68185610ce7565b9350610fb6818560208601610f4d565b610fbf81610f80565b840191505092915050565b60006040820190508181036000830152610fe48185610f91565b9050610ff36020830184610bea565b9392505050565b600061100582610bb6565b915061101083610bb6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561104957611048610d64565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061108e82610bb6565b915061109983610bb6565b9250826110a9576110a8611054565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110d3816110b4565b81146110de57600080fd5b50565b6000815190506110f0816110ca565b92915050565b6000819050919050565b611109816110f6565b811461111457600080fd5b50565b60008151905061112681611100565b92915050565b60008151905061113b81610c8e565b92915050565b600080600080600060a0868803121561115d5761115c610b26565b5b600061116b888289016110e1565b955050602061117c88828901611117565b945050604061118d8882890161112c565b935050606061119e8882890161112c565b92505060806111af888289016110e1565b9150509295509295909350565b60006111c7826110f6565b91506111d2836110f6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561121157611210610d64565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561124e5761124d610d64565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561128b5761128a610d64565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156112c8576112c7610d64565b5b82820290509291505056fea2646970667358221220e700a145f880850d40de536a56c7758ab707398c4cb7a9f6affcde915d8f39fd64736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
